<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Flurl.Http.Xml</name>
    </assembly>
    <members>
        <member name="T:Flurl.Http.Xml.CapturedXmlContent">
            <summary>
            Provides HTTP content based on a serialized XML object, with the XML string captured to a property
            so it can be read without affecting the read-once content stream.
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.CapturedXmlContent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Flurl.Http.Xml.CapturedXmlContent"/> class.
            </summary>
            <param name="xml">The XML.</param>
        </member>
        <member name="T:Flurl.Http.Xml.FlurlClientExtensions">
            <summary>
            FlurlClientExtensions
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXmlAsync``1(Flurl.Http.FlurlClient,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="client">The client.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A Task whose result is the XML response body deserialized to an object of type T.
            </returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXmlAsync``1(Flurl.Http.FlurlClient)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body deserialized to an object of type T.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXDocumentAsync(Flurl.Http.FlurlClient,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="client">The client.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A Task whose result is the XML response body parsed into an XDocument.
            </returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXDocumentAsync(Flurl.Http.FlurlClient)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into an XDocument.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXElementsFromXPath(Flurl.Http.FlurlClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="client">The client.</param>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A Task whose result is the XML response body parsed into a collection of XElements.
            </returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXElementsFromXPath(Flurl.Http.FlurlClient,System.String)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXElementsFromXPath(Flurl.Http.FlurlClient,System.String,System.Xml.IXmlNamespaceResolver,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="client">The client.</param>
            <param name="expression">The expression.</param>
            <param name="resolver">The resolver.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A Task whose result is the XML response body parsed into a collection of XElements.
            </returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.GetXElementsFromXPath(Flurl.Http.FlurlClient,System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.PostXmlAsync(Flurl.Http.FlurlClient,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous POST request.
            </summary>
            <param name="client">The client.</param>
            <param name="data">Contents of the request body.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A Task whose result is the received HttpResponseMessage.
            </returns>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlClientExtensions.PostXmlAsync(Flurl.Http.FlurlClient,System.Object)">
            <summary>
            Sends an asynchronous POST request.
            </summary>
            <param name="client">The client.</param>
            <param name="data">Contents of the request body.</param>
            <returns>
            A Task whose result is the received HttpResponseMessage.
            </returns>
        </member>
        <member name="T:Flurl.Http.Xml.FlurlHttpSettingsExtensions">
            <summary>
            FlurlHttpSettingsExtensions
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlHttpSettingsExtensions.XmlSerializer(Flurl.Http.Configuration.FlurlHttpSettings)">
            <summary>
            XMLs the serializer.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Flurl.Http.Xml.FlurlHttpSettingsExtensions.XmlSerializer(Flurl.Http.Configuration.FlurlHttpSettings,System.Xml.XmlWriterSettings)">
            <summary>
            XMLs the serializer.
            </summary>
            <param name="settings">The settings.</param>
            <param name="xmlWriterSettings">The XML writer settings.</param>
        </member>
        <member name="T:Flurl.Http.Xml.HttpResponseMessageExtensions">
            <summary>
            HttpResponseMessageExtensions
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.HttpResponseMessageExtensions.ReceiveXml``1(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage})">
            <summary>
            Deserializes XML-formatted HTTP response body to object of type T. Intended to chain off an async HTTP.
            </summary>
            <typeparam name="T">A type whose structure matches the expected XML response.</typeparam>
            <returns>A Task whose result is an object containing data in the response body.</returns>
            <example>x = await url.PosAsync(data).ReceiveXml&lt;T&gt;()</example>
        </member>
        <member name="M:Flurl.Http.Xml.HttpResponseMessageExtensions.ReceiveXDocument(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage})">
            <summary>
            Parses XML-formatted HTTP response body into an XDocument. Intended to chain off an async call.
            </summary>
            <returns>A Task whose result is an XDocument containing XML data from the response body.</returns>
            <example>d = await url.PostAsync(data).ReceiveXDocument()</example>
        </member>
        <member name="M:Flurl.Http.Xml.HttpResponseMessageExtensions.ReceiveXElementsFromXPath(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.String)">
            <summary>
            Parses XML-formatted HTTP response body into a collection of XElements. Intended to chain off an async call.
            </summary>
            <returns>A Task whose result is a collection of XElements from an XDocument containing XML data from the response body.</returns>
            <example>d = await url.PostAsync(data).ReceiveXElementsFromXPath(xpathExpression)</example>
        </member>
        <member name="M:Flurl.Http.Xml.HttpResponseMessageExtensions.ReceiveXElementsFromXPath(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Parses XML-formatted HTTP response body into a collection of XElements. Intended to chain off an async call.
            </summary>
            <returns>A Task whose result is a collection of XElements from an XDocument containing XML data from the response body.</returns>
            <example>d = await url.PostAsync(data).ReceiveXElementsFromXPath(xpathExpression, namespaceResolver)</example>
        </member>
        <member name="T:Flurl.Http.Xml.MicrosoftXmlSerializer">
            <summary>
            ISerializer implementation that uses Microsoft XmlSerializer.
            Default serializer used in calls to GetXmlAsync, PostXmlAsync, etc.
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.MicrosoftXmlSerializer.#ctor(System.Xml.XmlWriterSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Flurl.Http.Xml.MicrosoftXmlSerializer"/> class.
            </summary>
            <param name="xmlWriterSettings">The XML writer settings.</param>
        </member>
        <member name="M:Flurl.Http.Xml.MicrosoftXmlSerializer.Serialize(System.Object)">
            <summary>
            Serializes an object to a string representation.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Flurl.Http.Xml.MicrosoftXmlSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes an object from a string representation.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s">The string.</param>
        </member>
        <member name="M:Flurl.Http.Xml.MicrosoftXmlSerializer.Deserialize``1(System.IO.Stream)">
            <summary>
            Deserializes an object from a stream representation.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:Flurl.Http.Xml.StringExtensions">
            <summary>
            StringExtensions
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXmlAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url">The URL.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads 
            to receive notice of cancellation.</param>
            <returns>
            A Task whose result is the XML response body deserialized to an object of type T.
            </returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXmlAsync``1(System.String)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body deserialized to an object of type T.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXDocumentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="url">The URL.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads 
            to receive notice of cancellation.</param>
            <returns>A Task whose result is the XML response body parsed into an XDocument.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXDocumentAsync(System.String)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into an XDocument.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXElementsFromXPath(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="url">The URL.</param>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXElementsFromXPath(System.String,System.String)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXElementsFromXPath(System.String,System.String,System.Xml.IXmlNamespaceResolver,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="url">The URL.</param>
            <param name="expression">The expression.</param>
            <param name="resolver">The resolver.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.GetXElementsFromXPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.PostXmlAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a FlurlClient from the URL and sends an asynchronous POST request.
            </summary>
            <param name="url">The URL.</param>
            <param name="data">Contents of the request body.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>A Task whose result is the received HttpResponseMessage.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.StringExtensions.PostXmlAsync(System.String,System.Object)">
            <summary>
            Creates a FlurlClient from the URL and sends an asynchronous POST request.
            </summary>
            <param name="url">The URL.</param>
            <param name="data">Contents of the request body.</param>
            <returns>A Task whose result is the received HttpResponseMessage.</returns>
        </member>
        <member name="T:Flurl.Http.Xml.UrlExtensions">
            <summary>
            UrlExtensions
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXmlAsync``1(Flurl.Url,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url">The URL.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A Task whose result is the XML response body deserialized to an object of type T.
            </returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXmlAsync``1(Flurl.Url)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body deserialized to an object of type T.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXDocumentAsync(Flurl.Url,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="url">The URL.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>A Task whose result is the XML response body parsed into an XDocument.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXDocumentAsync(Flurl.Url)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into an XDocument.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXElementsFromXPath(Flurl.Url,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="url">The URL.</param>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXElementsFromXPath(Flurl.Url,System.String)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXElementsFromXPath(Flurl.Url,System.String,System.Xml.IXmlNamespaceResolver,System.Threading.CancellationToken)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <param name="url">The URL.</param>
            <param name="expression">The expression.</param>
            <param name="resolver">The resolver.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.GetXElementsFromXPath(Flurl.Url,System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Sends an asynchronous GET request.
            </summary>
            <returns>A Task whose result is the XML response body parsed into a collection of XElements.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.PostXmlAsync(Flurl.Url,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a FlurlClient from the URL and sends an asynchronous POST request.
            </summary>
            <param name="url">The URL.</param>
            <param name="data">Contents of the request body.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>A Task whose result is the received HttpResponseMessage.</returns>
        </member>
        <member name="M:Flurl.Http.Xml.UrlExtensions.PostXmlAsync(Flurl.Url,System.Object)">
            <summary>
            Creates a FlurlClient from the URL and sends an asynchronous POST request.
            </summary>
            <param name="url">The URL.</param>
            <param name="data">Contents of the request body.</param>
            <returns>A Task whose result is the received HttpResponseMessage.</returns>
        </member>
        <member name="T:Flurl.Http.Xml.Utf8StringWriter">
            <summary>
            Utf8StringWriter
            </summary>
            <seealso cref="T:System.IO.StringWriter" />
        </member>
        <member name="M:Flurl.Http.Xml.Utf8StringWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flurl.Http.Xml.Utf8StringWriter"/> class.
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.Utf8StringWriter.#ctor(System.Text.StringBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Flurl.Http.Xml.Utf8StringWriter"/> class.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="P:Flurl.Http.Xml.Utf8StringWriter.Encoding">
            <summary>
            Gets the encoding.
            </summary>
            <value>
            The encoding.
            </value>
        </member>
        <member name="T:Flurl.Http.Xml.XDocumentExtensions">
            <summary>
            XDocumentExtensions
            </summary>
        </member>
        <member name="M:Flurl.Http.Xml.XDocumentExtensions.ToStringWithDeclaration(System.Xml.Linq.XDocument)">
            <summary>
            To the string with declaration.
            </summary>
            <param name="doc">The document.</param>
        </member>
    </members>
</doc>
